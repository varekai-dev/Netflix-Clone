{"version":3,"sources":["Nav.js","axios.js","Reguests.js","Banner.js","Row.js","HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","show","handleShow","transitionNavBar","window","scrollY","useEffect","addEventListener","removeEventListener","className","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchComedyMovies","Banner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","map","poster_path","id","HomeScreen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf2a886d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Nav.scss'\r\n\r\nfunction Nav() {\r\nconst [show, handleShow] =useState(false)\r\n\r\nconst transitionNavBar = ()=>{\r\n  if(window.scrollY> 100){\r\n    handleShow(true)\r\n  }\r\n  else{handleShow(false)}\r\n}\r\nuseEffect(()=>{\r\n  window.addEventListener('scroll', transitionNavBar)\r\n  return ()=> window.removeEventListener('scroll', transitionNavBar)\r\n},[])\r\n  return (\r\n    <div className={`nav ${show && 'nav__black'} `}>\r\n     <div className=\"nav__content\">\r\n     <img className=\"nav__logo\" src=\"https://logos-download.com/wp-content/uploads/2016/03/Netflix_logo.png\" alt=\"netflix\"/>\r\n      <img className=\"nav__avatar\" src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/1bdc9a33850498.56ba69ac2ba5b.png\" alt=\"avatar\"/>\r\n     </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Nav\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;\r\n","const API_KEY = '903e58618f7ebfe5deace7e09887c68a';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Banner.scss';\r\nimport axios from './axios';\r\nimport requests from './Reguests';\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + '...' : string;\r\n  }\r\n  console.log(movie);\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center center',\r\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">{truncate(`${movie?.overview}`, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Row.scss';\r\nimport axios from './axios';\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const baseURL = 'https://image.tmdb.org/t/p/original/';\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map(\r\n          (movie) =>\r\n            ((isLargeRow && movie.poster_path) || (!isLargeRow && movie.poster_path)) && (\r\n              <img\r\n                key={movie.id}\r\n                className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\r\n                src={`${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                alt={movie.name}\r\n              />\r\n            ),\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport './HomeScreen.scss';\r\nimport Nav from './Nav';\r\nimport Banner from './Banner';\r\nimport Row from './Row';\r\nimport requests from './Reguests';\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries Movies\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","\nimport './App.css';\nimport HomeScreen from './HomeScreen';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <HomeScreen/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}